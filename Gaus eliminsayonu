def gauss_elimination(a, b):
    n = len(b)

    # Birleştirilmiş matris
    for i in range(n):
        a[i].append(b[i])

    # İleri Eleme (Forward Elimination)
    for i in range(n):
        # En büyük elemanı bul ve satır değiştir
        max_row = i
        for k in range(i+1, n):
            if abs(a[k][i]) > abs(a[max_row][i]):
                max_row = k
        a[i], a[max_row] = a[max_row], a[i]

        # Pivot eleman sıfırsa çözüm yok veya sonsuz çözüm var
        if a[i][i] == 0:
            raise ValueError("Sıfır pivot: Çözüm yok veya sonsuz çözüm var!")

        # Diğer satırları sıfırla
        for k in range(i+1, n):
            factor = a[k][i] / a[i][i]
            for j in range(i, n+1):
                a[k][j] -= factor * a[i][j]

    # Geri Yerine Koyma (Back Substitution)
    x = [0 for _ in range(n)]
    for i in range(n-1, -1, -1):
        x[i] = a[i][n] / a[i][i]
        for k in range(i-1, -1, -1):
            a[k][n] -= a[k][i] * x[i]

    return x


# Örnek denklem sistemi:
# 2x + y - z = 8
# -3x - y + 2z = -11
# -2x + y + 2z = -3

A = [[2, 1, -1],
     [-3, -1, 2],
     [-2, 1, 2]]

B = [8, -11, -3]

cozum = gauss_elimination(A, B)

print("Cözüm: ")
for i, val in enumerate(cozum):
    print(f"x{i+1} = {val:.4f}")
